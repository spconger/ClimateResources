# Generated by Django 2.2.6 on 2020-02-24 23:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContentPublisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publishername', models.CharField(max_length=255)),
                ('publishersemail', models.CharField(blank=True, max_length=255, null=True)),
                ('publisherurl', models.URLField(blank=True, null=True)),
                ('publisherdescription', models.TextField(blank=True, null=True)),
                ('publisherdateadded', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'contentpublisher',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventtypename', models.CharField(max_length=255)),
                ('eventtypedescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eventtype',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('postalcode', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mediatypename', models.CharField(max_length=255)),
                ('mediatypedescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mediatype',
            },
        ),
        migrations.CreateModel(
            name='PersonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persontypename', models.CharField(max_length=255)),
                ('persontypedescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'persontype',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topicname', models.CharField(max_length=255)),
                ('topicdescription', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'topic',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personname', models.CharField(max_length=255)),
                ('personemail', models.CharField(blank=True, max_length=255, null=True)),
                ('persontitle', models.CharField(blank=True, max_length=255, null=True)),
                ('persondescription', models.TextField(blank=True, null=True)),
                ('personDateEntered', models.DateField(auto_now=True)),
                ('persontype', models.ManyToManyField(to='climate.PersonType')),
            ],
            options={
                'verbose_name_plural': 'people',
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('mediadescription', models.TextField()),
                ('mediadateentered', models.DateField(auto_now=True)),
                ('mediaperson', models.ManyToManyField(to='climate.Person')),
                ('mediapublisher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='climate.ContentPublisher')),
                ('mediatopics', models.ManyToManyField(to='climate.Topic')),
                ('mtype', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='climate.MediaType')),
            ],
            options={
                'db_table': 'media',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institutionname', models.CharField(max_length=255)),
                ('institutionemail', models.CharField(blank=True, max_length=255, null=True)),
                ('institutionphone', models.CharField(blank=True, max_length=255, null=True)),
                ('institutiondescription', models.TextField(blank=True, null=True)),
                ('institutiondateentered', models.DateField(auto_now=True)),
                ('institutionlocation', models.ManyToManyField(to='climate.Location')),
            ],
            options={
                'db_table': 'institution',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventname', models.CharField(max_length=255)),
                ('eventdate', models.DateField()),
                ('eventtime', models.TimeField()),
                ('eventdescription', models.TextField()),
                ('contentpublisherid', models.ManyToManyField(to='climate.ContentPublisher')),
                ('eventinstitutionid', models.ManyToManyField(to='climate.Institution')),
                ('eventlocation', models.ManyToManyField(to='climate.Location')),
                ('eventtopic', models.ManyToManyField(to='climate.Topic')),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.AddField(
            model_name='contentpublisher',
            name='publisheraddress',
            field=models.ManyToManyField(to='climate.Location'),
        ),
    ]
